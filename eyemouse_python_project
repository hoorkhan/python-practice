import cv2
import mediapipe as mp #to detect whether the face is present
import pyautogui# to control the mouse 

cam = cv2.VideoCapture(0)
mp_face_mesh = mp.solutions.face_mesh
face_mesh = mp_face_mesh.FaceMesh(refine_landmarks=True)
screen_w, screen_h = pyautogui.size()
while True:#video is running
    _, frame = cam.read()
    frame = cv2.flip(frame,1)#flipping vertically
    #to detect the face
    rgb_frame= cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)#in different color
    #create the output of rgb_frame by using face_mesh used before
    output = face_mesh.process(rgb_frame)
    #to dectect face there are points
    landmark_points = output.multi_face_landmarks
    frame_h, frame_w, _=frame.shape
    if landmark_points:
        landmarks= landmark_points[0].landmark
        for id, landmark in enumerate(landmarks[474:478]):#for eyes #enumerate give index and the element
            x= int(landmark.x * frame_w)# to make it in a circular for face we need integer not float, detect the center
            y= int(landmark.y * frame_h)
            cv2.circle(frame, (x,y),3,(0,255,0))
            if id==1:
                screen_x = screen_w/ frame_w * x
                screen_y = screen_h/ frame_h * y
                
                pyautogui.moveTo(screen_x,screen_y)
        left =[landmarks[145], landmarks[159]]
        for landmark in left:
            x= int(landmark.x * frame_w)# to make it in a circular for face we need integer not float, detect the center
            y= int(landmark.y * frame_h)
            cv2.circle(frame, (x,y),3,(0,255,255))
        if (left[0].y - left[1].y) < 0.004:
            pyautogui.click()
            pyautogui.sleep(1)
    cv2.imshow('Eye Controlled Mouse', frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
cam.release()
cv2.destroyAllWindows()
